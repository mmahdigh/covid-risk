{"version":3,"sources":["icons/usa.svg","icons/iran.svg","icons/united-kingdom.svg","icons/people.svg","icons/location.svg","icons/italy.svg","icons/mexico.svg","icons/spain.svg","icons/india.svg","icons/russia.svg","icons/france.svg","icons/poland.svg","icons/colombia.svg","icons/brazil.svg","icons/belgium.svg","icons/turkey.svg","icons/ukraine.svg","icons/romania.svg","icons/hungary.svg","icons/indonesia.svg","icons/germany.svg","icons/greece.svg","icons/argentina.svg","icons/portugal.svg","icons/tunisia.svg","icons/jordan.svg","icons/ecuador.svg","icons/morocco.svg","icons/austria.svg","icons/bulgaria.svg","icons/netherlands.svg","icons/south-africa.svg","icons/canada.svg","icons/pakistan.svg","icons/japan.svg","icons/china.svg","icons/australia.svg","icons/nigeria.svg","icons/czech-republic.svg","logic/data.ts","logic/main.ts","logic/constants.ts","logic/trivia.ts","App.tsx","utils/index.ts","reportWebVitals.ts","index.tsx"],"names":["module","exports","RegionCovidData","Tehran","lastWeekAverageDeathPerMillionEachDay","updatedAt","medianAge","allDeathPerMillion","flag","iran","Khorasan_Razavi","speculation","Isfahan","Alborz","Fars","Iran","Italy","italy","Mexico","mexico","Spain","spain","India","india","Russia","russia","United_Kingdom","united_kingdom","Poland","poland","France","france","Colombia","colombia","Brazil","brazil","Belgium","belgium","Turkey","turkey","Ukraine","ukraine","Romania","romania","Hungary","hungary","Indonesia","indonesia","Germany","germany","Greece","greece","Czechia","czech_republic","Argentina","argentina","Portugal","portugal","Tunisia","tunisia","Jordan","jordan","Ecuador","ecuador","Morocco","morocco","Austria","austria","Bulgaria","bulgaria","Pakistan","pakistan","SouthAfrica","south_africa","Canada","canada","Netherlands","netherlands","Japan","japan","China","china","Australia","australia","Nigeria","nigeria","United_States","usa","Illinois","Texas","Pennsylvania","Michigan","Florida","Minnesota","Wisconsin","South_Carolina","Missouri","Colorado","Indiana","Georgia","South_Dakota","Montana","California","New_Jersey","Arizona","Nevada","Ohio","New_York","North_Carolina","Virginia","Iowa","New_Mexico","Oklahoma","Kentucky","Massachusetts","West_Virginia","Maryland","North_Dakota","Arkansas","Mississippi","Utah","Tennessee","Oregon","Hawaii","Alabama","Idaho","District_Of_Columbia","New_Hempshire","Alaska","Maine","Vermont","Connecticut","Louisiana","Rhode_Island","Delaware","Kansas","Nebraska","Washington","Wyoming","London","King_County","chanceOfMinimumOneCovidCase","individualCovidProbability","vulnerableSize","Math","pow","covidCasesPerMillionEachDayPredictor","deathPerMillionEachDay","calculateIFR","contractionChanceRegion","region","eventSize","Error","data","size","immunePopulation","ceil","allActiveCasesPerMillion","contractionChance","trivia","Option","Select","useStyles","createUseStyles","mainContainer","display","justifyContent","minHeight","inputCard","flexDirection","alignItems","width","backgroundColor","height","title","marginTop","color","rowContainer","paddingBottom","borderBottom","margin","fontSize","borderRadius","resultContainer","padding","table","border","paddingTop","textAlign","select","marginLeft","marginBottom","App","useState","location","setLocation","setEventSize","result","setResult","selectRef","useRef","classes","className","style","verticalAlign","marginRight","href","data-icon","data-size","data-show-count","aria-label","boxShadow","undefined","fontWeight","min","Number","id","colSpan","getLastWeekDeaths","getAllDeaths","floor","getTrivia","onClick","max","tooltipVisible","value","onChange","defaultValue","src","people","mode","placeholder","ref","current","val","length","blur","optionLabelProp","Object","keys","sort","map","key","replace","role","locationIcon","toFixed","position","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.35cd39ee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/usa.cbfe8d83.svg\";","module.exports = __webpack_public_path__ + \"static/media/iran.91df5738.svg\";","module.exports = __webpack_public_path__ + \"static/media/united-kingdom.dbb2d233.svg\";","module.exports = __webpack_public_path__ + \"static/media/people.ce737683.svg\";","module.exports = __webpack_public_path__ + \"static/media/location.3d0c5526.svg\";","module.exports = __webpack_public_path__ + \"static/media/italy.3d141447.svg\";","module.exports = __webpack_public_path__ + \"static/media/mexico.e3f1e4dc.svg\";","module.exports = __webpack_public_path__ + \"static/media/spain.c06563a7.svg\";","module.exports = __webpack_public_path__ + \"static/media/india.22ed30bb.svg\";","module.exports = __webpack_public_path__ + \"static/media/russia.1b038aa5.svg\";","module.exports = __webpack_public_path__ + \"static/media/france.78126112.svg\";","module.exports = __webpack_public_path__ + \"static/media/poland.bd4c370a.svg\";","module.exports = __webpack_public_path__ + \"static/media/colombia.19370811.svg\";","module.exports = __webpack_public_path__ + \"static/media/brazil.3b6447f7.svg\";","module.exports = __webpack_public_path__ + \"static/media/belgium.38a9aea5.svg\";","module.exports = __webpack_public_path__ + \"static/media/turkey.0b7944f2.svg\";","module.exports = __webpack_public_path__ + \"static/media/ukraine.2fed2ba2.svg\";","module.exports = __webpack_public_path__ + \"static/media/romania.a9894617.svg\";","module.exports = __webpack_public_path__ + \"static/media/hungary.7ea0b980.svg\";","module.exports = __webpack_public_path__ + \"static/media/indonesia.23056fec.svg\";","module.exports = __webpack_public_path__ + \"static/media/germany.69e304cd.svg\";","module.exports = __webpack_public_path__ + \"static/media/greece.095ffbf1.svg\";","module.exports = __webpack_public_path__ + \"static/media/argentina.9b8909c0.svg\";","module.exports = __webpack_public_path__ + \"static/media/portugal.d6d5e4d9.svg\";","module.exports = __webpack_public_path__ + \"static/media/tunisia.440186df.svg\";","module.exports = __webpack_public_path__ + \"static/media/jordan.b5170393.svg\";","module.exports = __webpack_public_path__ + \"static/media/ecuador.2261b01d.svg\";","module.exports = __webpack_public_path__ + \"static/media/morocco.00cecef8.svg\";","module.exports = __webpack_public_path__ + \"static/media/austria.fef04a56.svg\";","module.exports = __webpack_public_path__ + \"static/media/bulgaria.0f0e045b.svg\";","module.exports = __webpack_public_path__ + \"static/media/netherlands.3176ecb2.svg\";","module.exports = __webpack_public_path__ + \"static/media/south-africa.0c1b162d.svg\";","module.exports = __webpack_public_path__ + \"static/media/canada.518fb22b.svg\";","module.exports = __webpack_public_path__ + \"static/media/pakistan.08a6412e.svg\";","module.exports = __webpack_public_path__ + \"static/media/japan.180bed75.svg\";","module.exports = __webpack_public_path__ + \"static/media/china.53f67580.svg\";","module.exports = __webpack_public_path__ + \"static/media/australia.842ef757.svg\";","module.exports = __webpack_public_path__ + \"static/media/nigeria.1a7694c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/czech-republic.83d3c9a5.svg\";","import usa from '../icons/usa.svg'\nimport iran from '../icons/iran.svg'\nimport italy from '../icons/italy.svg'\nimport mexico from '../icons/mexico.svg'\nimport spain from '../icons/spain.svg'\nimport india from '../icons/india.svg'\nimport russia from '../icons/russia.svg'\nimport united_kingdom from '../icons/united-kingdom.svg'\nimport france from '../icons/france.svg'\nimport poland from '../icons/poland.svg'\nimport colombia from '../icons/colombia.svg'\nimport brazil from '../icons/brazil.svg'\nimport belgium from '../icons/belgium.svg'\nimport turkey from '../icons/turkey.svg'\nimport ukraine from '../icons/ukraine.svg'\nimport romania from '../icons/romania.svg'\nimport hungary from '../icons/hungary.svg'\nimport indonesia from '../icons/indonesia.svg'\nimport germany from '../icons/germany.svg'\nimport greece from '../icons/greece.svg'\nimport argentina from '../icons/argentina.svg'\nimport portugal from '../icons/portugal.svg'\nimport tunisia from '../icons/tunisia.svg'\nimport jordan from '../icons/jordan.svg'\nimport ecuador from '../icons/ecuador.svg'\nimport morocco from '../icons/morocco.svg'\nimport austria from '../icons/austria.svg'\nimport bulgaria from '../icons/bulgaria.svg'\nimport netherlands from '../icons/netherlands.svg'\nimport south_africa from '../icons/south-africa.svg'\nimport canada from '../icons/canada.svg'\nimport pakistan from '../icons/pakistan.svg'\nimport japan from '../icons/japan.svg'\nimport china from '../icons/china.svg'\nimport australia from '../icons/australia.svg'\nimport nigeria from '../icons/nigeria.svg'\nimport czech_republic from '../icons/czech-republic.svg'\n\n\n\n\nexport interface CovidData {\n  [cityName: string]: RegionData;\n}\n\nexport interface RegionData {\n  updatedAt: number;\n  medianAge: number;\n  lastWeekAverageDeathPerMillionEachDay: number;\n  allDeathPerMillion: number;\n  speculation?: boolean;\n  flag?: string;\n}\n\nexport const getProvinceData = (province: keyof typeof RegionCovidData) => RegionCovidData[province]\n\nexport const RegionCovidData : CovidData = {\n  Tehran: {\n    lastWeekAverageDeathPerMillionEachDay: 8.96,\n    updatedAt: 1606078905916,\n    medianAge: 32,\n    allDeathPerMillion: 1300,\n    flag: iran,\n  },\n  Khorasan_Razavi: {\n    lastWeekAverageDeathPerMillionEachDay: 6.42,\n    updatedAt: 1606078905916,\n    medianAge: 32,\n    allDeathPerMillion: 1000,\n    speculation: true,\n    flag: iran,\n  },\n  Isfahan: {\n    lastWeekAverageDeathPerMillionEachDay: 6.42,\n    updatedAt: 1606078905916,\n    medianAge: 32,\n    allDeathPerMillion: 1000,\n    speculation: true,\n    flag: iran,\n  },\n  Alborz: {\n    lastWeekAverageDeathPerMillionEachDay: 7.14,\n    updatedAt: 1606078905916,\n    medianAge: 32,\n    allDeathPerMillion: 772,\n    speculation: true,\n    flag: iran,\n  },\n  Fars: {\n    lastWeekAverageDeathPerMillionEachDay: 6.60,\n    updatedAt: 1606078905916,\n    medianAge: 32,\n    allDeathPerMillion: 440,\n    speculation: true,\n    flag: iran,\n  },\n  Iran: {\n    lastWeekAverageDeathPerMillionEachDay: 5.65,\n    updatedAt: 1606078905916,\n    medianAge: 32,\n    allDeathPerMillion: 531,\n    speculation: true,\n    flag: iran,\n  },\n  Italy: {\n    lastWeekAverageDeathPerMillionEachDay: 10.85,\n    updatedAt: 1606125820016,\n    medianAge: 47.3,\n    allDeathPerMillion: 825,\n    flag: italy,\n  },\n  Mexico: {\n    lastWeekAverageDeathPerMillionEachDay: 3.43,\n    updatedAt: 1606125820016,\n    medianAge: 29.2,\n    allDeathPerMillion: 783,\n    flag: mexico,\n  },\n  Spain: {\n    lastWeekAverageDeathPerMillionEachDay: 5.71,\n    updatedAt: 1606125820016,\n    medianAge: 44.9,\n    allDeathPerMillion: 922,\n    flag: spain,\n  },\n  India: {\n    lastWeekAverageDeathPerMillionEachDay: 0.378,\n    updatedAt: 1606125820016,\n    medianAge: 26.8,\n    allDeathPerMillion: 97,\n    flag: india,\n  },\n  Russia: {\n    lastWeekAverageDeathPerMillionEachDay: 2.92,\n    updatedAt: 1606125820016,\n    medianAge: 39.6,\n    allDeathPerMillion: 248,\n    flag: russia,\n  },\n  United_Kingdom: {\n    lastWeekAverageDeathPerMillionEachDay: 6.49,\n    updatedAt: 1606125820016,\n    medianAge: 40.5,\n    allDeathPerMillion: 809,\n    flag: united_kingdom,\n  },\n  Poland: {\n    lastWeekAverageDeathPerMillionEachDay: 12.34,\n    updatedAt: 1606125820016,\n    medianAge: 39.7,\n    allDeathPerMillion: 360,\n    flag: poland,\n  },\n  France: {\n    lastWeekAverageDeathPerMillionEachDay: 8.28,\n    updatedAt: 1606125820016,\n    medianAge: 42.3,\n    allDeathPerMillion: 746,\n    flag: france,\n  },\n  Colombia: {\n    lastWeekAverageDeathPerMillionEachDay: 3.52,\n    updatedAt: 1606125820016,\n    medianAge: 29.5,\n    allDeathPerMillion: 691,\n    flag: colombia,\n  },\n  Brazil: {\n    lastWeekAverageDeathPerMillionEachDay: 2.26,\n    updatedAt: 1606125820016,\n    medianAge: 33.5,\n    allDeathPerMillion: 794,\n    flag: brazil,\n  },\n  Belgium: {\n    lastWeekAverageDeathPerMillionEachDay: 15,\n    updatedAt: 1606125820016,\n    medianAge: 41.3,\n    allDeathPerMillion: 1337,\n    flag: belgium,\n  },\n  Turkey: {\n    lastWeekAverageDeathPerMillionEachDay: 1.42,\n    updatedAt: 1606125820016,\n    medianAge: 31.5,\n    allDeathPerMillion: 146,\n    flag: turkey,\n  },\n  Ukraine: {\n    lastWeekAverageDeathPerMillionEachDay: 4.40,\n    updatedAt: 1606125820016,\n    medianAge: 41.2,\n    allDeathPerMillion: 251,\n    flag: ukraine,\n  },\n  Romania: {\n    lastWeekAverageDeathPerMillionEachDay: 8.34,\n    updatedAt: 1606125820016,\n    medianAge: 43.2,\n    allDeathPerMillion: 524,\n    flag: romania,\n  },\n  Hungary: {\n    lastWeekAverageDeathPerMillionEachDay: 10.46,\n    updatedAt: 1606125820016,\n    medianAge: 43.3,\n    allDeathPerMillion: 394,\n    flag: hungary,\n  },\n  Indonesia: {\n    lastWeekAverageDeathPerMillionEachDay: 0.35,\n    updatedAt: 1606125820016,\n    medianAge: 29.7,\n    allDeathPerMillion: 58,\n    flag: indonesia,\n  },\n  Germany: {\n    lastWeekAverageDeathPerMillionEachDay: 2.81,\n    updatedAt: 1606125820016,\n    medianAge: 45.9,\n    allDeathPerMillion: 171,\n    flag: germany,\n  },\n  Greece: {\n    lastWeekAverageDeathPerMillionEachDay: 7.21,\n    updatedAt: 1606125820016,\n    medianAge: 43.4,\n    allDeathPerMillion: 157,\n    flag: greece,\n  },\n  Czechia: {\n    lastWeekAverageDeathPerMillionEachDay: 13.16,\n    updatedAt: 1606125820016,\n    medianAge: 43.2,\n    allDeathPerMillion: 671,\n    flag: czech_republic,\n  },\n  Argentina: {\n    lastWeekAverageDeathPerMillionEachDay: 4.94,\n    updatedAt: 1606125820016,\n    medianAge: 31.5,\n    allDeathPerMillion: 816,\n    flag: argentina,\n  },\n  Portugal: {\n    lastWeekAverageDeathPerMillionEachDay: 7.27,\n    updatedAt: 1606125820016,\n    medianAge: 46.2,\n    allDeathPerMillion: 383,\n    flag: portugal,\n  },\n  Tunisia: {\n    lastWeekAverageDeathPerMillionEachDay: 5.73,\n    updatedAt: 1606125820016,\n    medianAge: 31.3,\n    allDeathPerMillion: 238,\n    flag: tunisia,\n  },\n  Jordan: {\n    lastWeekAverageDeathPerMillionEachDay: 6.54,\n    updatedAt: 1606125820016,\n    medianAge: 23.8,\n    allDeathPerMillion: 218,\n    flag: jordan,\n  },\n  Ecuador: {\n    lastWeekAverageDeathPerMillionEachDay: 1.58,\n    updatedAt: 1606125820016,\n    medianAge: 27.9,\n    allDeathPerMillion: 744,\n    flag: ecuador,\n  },\n  Morocco: {\n    lastWeekAverageDeathPerMillionEachDay: 2.05,\n    updatedAt: 1606125820016,\n    medianAge: 29.5,\n    allDeathPerMillion: 143,\n    flag: morocco,\n  },\n  Austria: {\n    lastWeekAverageDeathPerMillionEachDay: 8.87,\n    updatedAt: 1606125820016,\n    medianAge: 43.2,\n    allDeathPerMillion: 265,\n    flag: austria,\n  },\n  Bulgaria: {\n    lastWeekAverageDeathPerMillionEachDay: 15.46,\n    updatedAt: 1606125820016,\n    medianAge: 43.4,\n    allDeathPerMillion: 416,\n    flag: bulgaria,\n  },\n  Pakistan: {\n    lastWeekAverageDeathPerMillionEachDay: 0.16,\n    updatedAt: 1606125820016,\n    medianAge: 22.8,\n    allDeathPerMillion: 34,\n    flag: pakistan,\n  },\n  SouthAfrica: {\n    lastWeekAverageDeathPerMillionEachDay: 1.59,\n    updatedAt: 1606125820016,\n    medianAge: 27.6,\n    allDeathPerMillion: 351,\n    flag: south_africa,\n  },\n  Canada: {\n    lastWeekAverageDeathPerMillionEachDay: 1.87,\n    updatedAt: 1606125820016,\n    medianAge: 40.9,\n    allDeathPerMillion: 302,\n    flag: canada,\n  },\n  Netherlands: {\n    lastWeekAverageDeathPerMillionEachDay: 3.38,\n    updatedAt: 1606125820016,\n    medianAge: 42.1,\n    allDeathPerMillion: 518,\n    flag: netherlands,\n  },\n  Japan: {\n    lastWeekAverageDeathPerMillionEachDay: 0.10,\n    updatedAt: 1606125820016,\n    medianAge: 48.4,\n    allDeathPerMillion: 16,\n    flag: japan,\n  },\n  China: {\n    lastWeekAverageDeathPerMillionEachDay: 0,\n    updatedAt: 1606125820016,\n    medianAge: 38.4,\n    allDeathPerMillion: 3,\n    flag: china,\n  },\n  Australia: {\n    lastWeekAverageDeathPerMillionEachDay: 0,\n    updatedAt: 1606125820016,\n    medianAge: 37.0,\n    allDeathPerMillion: 35,\n    flag: australia,\n  },\n  Nigeria: {\n    lastWeekAverageDeathPerMillionEachDay: 0.004,\n    updatedAt: 1606125820016,\n    medianAge: 17.9,\n    allDeathPerMillion: 6,\n    flag: nigeria,\n  },\n  United_States: {\n    lastWeekAverageDeathPerMillionEachDay: 5.20,\n    updatedAt: 1606385157,\n    medianAge: 38.2,\n    allDeathPerMillion: 809,\n    flag: usa,\n  },\n  Illinois: {\n    lastWeekAverageDeathPerMillionEachDay: 9.841,\n    updatedAt: 1606078905916,\n    medianAge: 38.3,\n    allDeathPerMillion: 943,\n    flag: usa,\n  },\n  Texas: {\n    lastWeekAverageDeathPerMillionEachDay: 5.03,\n    updatedAt: 1606078905916,\n    medianAge: 34.8,\n    allDeathPerMillion: 727,\n    flag: usa,\n  },\n  Pennsylvania: {\n    lastWeekAverageDeathPerMillionEachDay: 5.70,\n    updatedAt: 1606078905916,\n    medianAge: 40.8,\n    allDeathPerMillion: 772,\n    flag: usa,\n  },\n  Michigan: {\n    lastWeekAverageDeathPerMillionEachDay: 7.11,\n    updatedAt: 1606078905916,\n    medianAge: 39.8,\n    allDeathPerMillion: 889,\n    flag: usa,\n  },\n  Florida: {\n    lastWeekAverageDeathPerMillionEachDay: 3.30,\n    updatedAt: 1606078905916,\n    medianAge: 42.2,\n    allDeathPerMillion: 836,\n    flag: usa,\n  },\n  Minnesota: {\n    lastWeekAverageDeathPerMillionEachDay: 8.33,\n    updatedAt: 1606078905916,\n    medianAge: 38.1,\n    allDeathPerMillion: 578,\n    flag: usa,\n  },\n  Wisconsin: {\n    lastWeekAverageDeathPerMillionEachDay: 9.28,\n    updatedAt: 1606078905916,\n    medianAge: 39.6,\n    allDeathPerMillion: 516,\n    flag: usa,\n  },\n  South_Carolina: {\n    lastWeekAverageDeathPerMillionEachDay: 4.66,\n    updatedAt: 1606078905916,\n    medianAge: 39.6,\n    allDeathPerMillion: 830,\n    flag: usa,\n  },\n  Missouri: {\n    lastWeekAverageDeathPerMillionEachDay: 5.87,\n    updatedAt: 1606078905916,\n    medianAge: 38.7,\n    allDeathPerMillion: 617,\n    flag: usa,\n  },\n  Colorado: {\n    lastWeekAverageDeathPerMillionEachDay: 6.59,\n    updatedAt: 1606078905916,\n    medianAge: 36.9,\n    allDeathPerMillion: 484,\n    flag: usa,\n  },\n  Indiana: {\n    lastWeekAverageDeathPerMillionEachDay: 7.72,\n    updatedAt: 1606078905916,\n    medianAge: 37.9,\n    allDeathPerMillion: 779,\n    flag: usa,\n  },\n  Georgia: {\n    lastWeekAverageDeathPerMillionEachDay: 3.01,\n    updatedAt: 1606078905916,\n    medianAge: 36.9,\n    allDeathPerMillion: 865,\n    flag: usa,\n  },\n  South_Dakota: {\n    lastWeekAverageDeathPerMillionEachDay: 25,\n    updatedAt: 1606078905916,\n    medianAge: 37.1,\n    allDeathPerMillion: 878,\n    flag: usa,\n  },\n  Montana: {\n    lastWeekAverageDeathPerMillionEachDay: 11.32,\n    updatedAt: 1606078905916,\n    medianAge: 39.9,\n    allDeathPerMillion: 561,\n    flag: usa,\n  },\n  California: {\n    lastWeekAverageDeathPerMillionEachDay: 1.54,\n    updatedAt: 1606078905916,\n    medianAge: 36.8,\n    allDeathPerMillion: 473,\n    flag: usa,\n  },\n  New_Jersey: {\n    lastWeekAverageDeathPerMillionEachDay: 3.15,\n    updatedAt: 1606078905916,\n    medianAge: 40.0,\n    allDeathPerMillion: 1900,\n    flag: usa,\n  },\n  Arizona: {\n    lastWeekAverageDeathPerMillionEachDay: 3.02,\n    updatedAt: 1606078905916,\n    medianAge: 37.9,\n    allDeathPerMillion: 887,\n    flag: usa,\n  },\n  Nevada: {\n    lastWeekAverageDeathPerMillionEachDay: 4.87,\n    updatedAt: 1606078905916,\n    medianAge: 38.1,\n    allDeathPerMillion: 653,\n    flag: usa,\n  },\n  Ohio: {\n    lastWeekAverageDeathPerMillionEachDay: 3.33,\n    updatedAt: 1606078905916,\n    medianAge: 39.4,\n    allDeathPerMillion: 512,\n    flag: usa,\n  },\n  New_York: {\n    lastWeekAverageDeathPerMillionEachDay: 1.74,\n    updatedAt: 1606078905916,\n    medianAge: 39.0,\n    allDeathPerMillion: 1759,\n    flag: usa,\n  },\n  North_Carolina: {\n    lastWeekAverageDeathPerMillionEachDay: 3.44,\n    updatedAt: 1606078905916,\n    medianAge: 38.9,\n    allDeathPerMillion: 477,\n    flag: usa,\n  },\n  Virginia: {\n    lastWeekAverageDeathPerMillionEachDay: 2.34,\n    updatedAt: 1606078905916,\n    medianAge: 38.4,\n    allDeathPerMillion: 461,\n    flag: usa,\n  },\n  Iowa: {\n    lastWeekAverageDeathPerMillionEachDay: 8.25,\n    updatedAt: 1606078905916,\n    medianAge: 38.2,\n    allDeathPerMillion: 685,\n    flag: usa,\n  },\n  New_Mexico: {\n    lastWeekAverageDeathPerMillionEachDay: 9.57,\n    updatedAt: 1606078905916,\n    medianAge: 38.1,\n    allDeathPerMillion: 644,\n    flag: usa,\n  },\n  Oklahoma: {\n    lastWeekAverageDeathPerMillionEachDay: 4.05,\n    updatedAt: 1606078905916,\n    medianAge: 36.7,\n    allDeathPerMillion: 410,\n    flag: usa,\n  },\n  Kentucky: {\n    lastWeekAverageDeathPerMillionEachDay: 4.03,\n    updatedAt: 1606078905916,\n    medianAge: 38.9,\n    allDeathPerMillion: 399,\n    flag: usa,\n  },\n  Massachusetts: {\n    lastWeekAverageDeathPerMillionEachDay: 4.06,\n    updatedAt: 1606078905916,\n    medianAge: 39.4,\n    allDeathPerMillion: 1522,\n    flag: usa,\n  },\n  West_Virginia: {\n    lastWeekAverageDeathPerMillionEachDay: 6.70,\n    updatedAt: 1606078905916,\n    medianAge: 42.7,\n    allDeathPerMillion: 367,\n    flag: usa,\n  },\n  Maryland: {\n    lastWeekAverageDeathPerMillionEachDay: 6.04,\n    updatedAt: 1606078905916,\n    medianAge: 38.8,\n    allDeathPerMillion: 730,\n    flag: usa,\n  },\n  North_Dakota: {\n    lastWeekAverageDeathPerMillionEachDay: 20.99,\n    updatedAt: 1606078905916,\n    medianAge: 35.2,\n    allDeathPerMillion: 1094,\n    flag: usa,\n  },\n  Arkansas: {\n    lastWeekAverageDeathPerMillionEachDay: 8.30,\n    updatedAt: 1606078905916,\n    medianAge: 38.3,\n    allDeathPerMillion: 774,\n    flag: usa,\n  },\n  Mississippi: {\n    lastWeekAverageDeathPerMillionEachDay: 5.38,\n    updatedAt: 1606078905916,\n    medianAge: 37.7,\n    allDeathPerMillion: 1229,\n    flag: usa,\n  },\n  Utah: {\n    lastWeekAverageDeathPerMillionEachDay: 3.43,\n    updatedAt: 1606078905916,\n    medianAge: 31,\n    allDeathPerMillion: 245,\n    flag: usa,\n  },\n  Tennessee: {\n    lastWeekAverageDeathPerMillionEachDay: 7.02,\n    updatedAt: 1606078905916,\n    medianAge: 38.8,\n    allDeathPerMillion: 617,\n    flag: usa,\n  },\n  Oregon: {\n    lastWeekAverageDeathPerMillionEachDay: 1.90,\n    updatedAt: 1606078905916,\n    medianAge: 39.4,\n    allDeathPerMillion: 194,\n    flag: usa,\n  },\n  Hawaii: {\n    lastWeekAverageDeathPerMillionEachDay: 0.71,\n    updatedAt: 1606078905916,\n    medianAge: 39.2,\n    allDeathPerMillion: 163,\n    flag: usa,\n  },\n  Alabama: {\n    lastWeekAverageDeathPerMillionEachDay: 6.12,\n    updatedAt: 1606078905916,\n    medianAge: 39.2,\n    allDeathPerMillion: 705,\n    flag: usa,\n  },\n  Idaho: {\n    lastWeekAverageDeathPerMillionEachDay: 6.74,\n    updatedAt: 1606078905916,\n    medianAge: 36.6,\n    allDeathPerMillion: 474,\n    flag: usa,\n  },\n  District_Of_Columbia: {\n    lastWeekAverageDeathPerMillionEachDay: 1.418,\n    updatedAt: 1606078905916,\n    medianAge: 34.0,\n    allDeathPerMillion: 949,\n    flag: usa,\n  },\n  New_Hempshire: {\n    lastWeekAverageDeathPerMillionEachDay: 1.47,\n    updatedAt: 1606078905916,\n    medianAge: 43.0,\n    allDeathPerMillion: 374,\n    flag: usa,\n  },\n  Alaska: {\n    lastWeekAverageDeathPerMillionEachDay: 0.81,\n    updatedAt: 1606078905916,\n    medianAge: 34.6,\n    allDeathPerMillion: 138, \n    flag: usa,\n  },\n  Maine: {\n    lastWeekAverageDeathPerMillionEachDay: 0.74,\n    updatedAt: 1606078905916,\n    medianAge: 44.9,\n    allDeathPerMillion: 129,\n    flag: usa,\n  },\n  Vermont: {\n    lastWeekAverageDeathPerMillionEachDay: 0.91,\n    updatedAt: 1606078905916,\n    medianAge: 42.8,\n    allDeathPerMillion: 101,\n    flag: usa,\n  },\n  Connecticut: {\n    lastWeekAverageDeathPerMillionEachDay: 3.65,\n    updatedAt: 1606078905916,\n    medianAge: 41.0,\n    allDeathPerMillion: 1354,\n    flag: usa,\n  },\n  Louisiana: {\n    lastWeekAverageDeathPerMillionEachDay: 3.44,\n    updatedAt: 1606078905916,\n    medianAge: 37.2,\n    allDeathPerMillion: 1341,\n    flag: usa,\n  },\n  Rhode_Island: {\n    lastWeekAverageDeathPerMillionEachDay: 4.76,\n    updatedAt: 1606078905916,\n    medianAge: 40.1,\n    allDeathPerMillion: 1221,\n    flag: usa,\n  },\n  Delaware: {\n    lastWeekAverageDeathPerMillionEachDay: 1.02,\n    updatedAt: 1606078905916,\n    medianAge: 40.7,\n    allDeathPerMillion: 766,\n    flag: usa,\n  },\n  Kansas: {\n    lastWeekAverageDeathPerMillionEachDay: 7.56,\n    updatedAt: 1606078905916,\n    medianAge: 36.9,\n    allDeathPerMillion: 484,\n    flag: usa,\n  },\n  Nebraska: {\n    lastWeekAverageDeathPerMillionEachDay: 9.32,\n    updatedAt: 1606078905916,\n    medianAge: 36.6,\n    allDeathPerMillion: 464,\n    flag: usa,\n  },\n  Washington: {\n    lastWeekAverageDeathPerMillionEachDay: 1.97,\n    updatedAt: 1606078905916,\n    medianAge: 37.7,\n    allDeathPerMillion: 346,\n    flag: usa,\n  },\n  Wyoming: {\n    lastWeekAverageDeathPerMillionEachDay: 8.65,\n    updatedAt: 1606078905916,\n    medianAge: 38.0,\n    allDeathPerMillion: 304,\n    flag: usa,\n  },\n  London: {\n    lastWeekAverageDeathPerMillionEachDay: 2.54,\n    updatedAt: 1606305837,\n    medianAge: 35.3,\n    allDeathPerMillion: 1076,\n    flag: united_kingdom,\n  },\n  King_County: {\n    lastWeekAverageDeathPerMillionEachDay: 9.88,\n    updatedAt: 1606305837,\n    medianAge: 37.1,\n    allDeathPerMillion: 392,\n    flag: usa,\n  },\n\n\n}","import { AsymptomaticChance, CDCIfr, CovidIncubation, CovidInfectiousPeriod, USMedianAge } from \"./constants\";\nimport { RegionCovidData, getProvinceData, CovidData, RegionData } from './data';\n\nconst contractionChance = (size: number,\n   deathPerMillionEachDay: number, allDeathPerMillion: number, medianAge: number) => {\n  \n  const ifr = calculateIFR(medianAge);\n  const immunePopulation = allDeathPerMillion / ifr / 1000000;\n  const vulnerableSize = Math.ceil((1 - immunePopulation) * size)\n  const covidCasesPerMillionEachDay = covidCasesPerMillionEachDayPredictor(deathPerMillionEachDay, medianAge);\n  const allActiveCasesPerMillion = covidCasesPerMillionEachDay * CovidInfectiousPeriod;\n  const activeCasesNotInQuarantine = AsymptomaticChance * allActiveCasesPerMillion + \n  (1 - AsymptomaticChance) * CovidIncubation / CovidInfectiousPeriod * allActiveCasesPerMillion;\n  \n  const chanceOfCovidAndNotBeingInQuarantine = activeCasesNotInQuarantine / (1000000 * (1 - immunePopulation));\n\n  return chanceOfMinimumOneCovidCase(chanceOfCovidAndNotBeingInQuarantine, vulnerableSize);\n\n}\n\nconst chanceOfMinimumOneCovidCase = (individualCovidProbability: number, vulnerableSize: number) => {\n  return 1 - Math.pow(1 - individualCovidProbability, vulnerableSize);\n}\n\nconst covidCasesPerMillionEachDayPredictor = (deathPerMillionEachDay: number,\n   medianAge: number) => {\n    const ifr = calculateIFR(medianAge);\n    return (1 / ifr) * deathPerMillionEachDay;\n\n}\nconst calculateIFR = (medianAge: number) => {\n  const coeff = Math.pow(1.0905077, medianAge - USMedianAge)\n  return CDCIfr * coeff;\n}\n\n\nexport const contractionChanceRegion = (region: string, eventSize: number) => {\n  if (!(region in RegionCovidData)) throw Error(\"invalid Region\");\n  const data = RegionCovidData[region]\n  return contractionChance(eventSize, data.lastWeekAverageDeathPerMillionEachDay,\n  data.allDeathPerMillion, data.medianAge )\n}\n","export const AsymptomaticChance = 0.5;\nexport const USMedianAge = 38.2\nexport const CDCIfr = 0.0065;\nexport const CovidIncubation = 5;\nexport const CovidInfectiousPeriod = 20;","export type TriviaPercentage = \"0\" | \"1\" | \"3\" | \"5\" | \"10\" | \"15\" | \"20\" | \"25\" | \"30\" | \"35\" | \"40\" | \"45\" | \"50\"\n\nexport const trivia : Record<TriviaPercentage, string[]> = {\n  \"3\": [\"getting two 6s when rolling two dice is around 3%.\"],\n  \"5\": [\"an adult is an only child\", \"odds a guy born in 1950 is named Robert.\"],\n  \"10\": ['a mobile bought in 2020 is made by Xiaomi.'],\n  \"20\": [\"a homeless person is under 18.\"], \n  \"25\": [\"an employed adult is somewhat satisfied with his or her boss.\"] ,\n  \"30\": [\"an adult uses the Internet before going to bed.\"] ,\n  \"35\": [\"a student 12-18 will be bullied at school in a year.\"],\n  \"40\": [\"a student 12-18 will be bullied at school in a year.\"],\n  \"45\": [\"a coin flip lands on tails.\"],\n  \"50\": [\"a coin flip lands on heads.\"],\n  \"15\": [\"an adult has less than a high school diploma.\", \n  \"an adult with a tattoo regrets it.\"],\n  \"0\": [\"a person will die from a heart attack in a year.\"],\n  \"1\": [\"an adult showers less than once a week.\", \"odds an adult under 50 doesn't own a cellphone.\"]\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport people from \"./icons/people.svg\";\nimport locationIcon from \"./icons/location.svg\";\nimport \"./App.css\";\nimport \"antd/dist/antd.css\";\nimport { Select, Slider } from \"antd\";\nimport { RegionCovidData, RegionData } from \"./logic/data\";\nimport { calcRegionName } from \"./utils/index\";\nimport { RefSelectProps } from \"antd/lib/select\";\nimport { contractionChanceRegion } from \"./logic/main\";\nimport { trivia, TriviaPercentage,  } from './logic/trivia';\nimport { createUseStyles } from \"react-jss\";\n\nconst { Option } = Select;\n\nconst useStyles = createUseStyles({\n  mainContainer: {\n    display: \"flex\",\n    justifyContent: 'space-evenly',\n    minHeight: \"calc(100vh - 300px)\",\n  },\n  inputCard: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    // font-family: apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,sans-serif,\n    width: 700,\n    /* margin: auto; */\n    justifyContent: 'space-between',\n    backgroundColor: \"rgb(250, 250, 250)\",\n    height: 400,\n  },\n  title: {\n    marginTop: 25, \n    color: '#fff'\n  },\n  rowContainer: {\n    display: \"flex\",\n    width: \"80%\",\n    justifyContent: \"space-around\",\n    marginTop: 50,\n    paddingBottom: 25,\n    borderBottom: \"1px solid #ddd\",\n    ['& > div']: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    ['& p']: {\n      margin: \"auto 0\",\n      fontSize: 18,\n    },\n    ['& img']: {\n      borderRadius: \"80%\",\n    },\n  },\n  resultContainer: {\n    display: 'flex',\n    padding: \"20px 0\",\n      justifyContent: 'space-evenly',\n    borderBottom: \"2px solid #eee\",\n    width: '100%'\n  },\n  table: {\n    width: 300,\n    fontSize: 14,\n    border: \"1px solid #000\",\n    ['&:nth-child(even)']: {backgroundColor: \"#f2f2f2\"},\n    ['& td:hover']: {backgroundColor: \"#ddd\"},\n    ['& th']: {\n      paddingTop: 12,\n      paddingBottom: 12,\n      textAlign: \"center\",\n      backgroundColor: \"#76cdb2\",\n      color: \"#000\",\n    },\n    ['& td']: {\n      padding: \"12px 0\",\n    },\n  },\n  select: {\n    marginLeft: 15,\n    width: 250,\n  },\n  '@media screen and (max-width: 600px)': {\n    mainContainer: {\n      flexDirection: 'column',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n    },\n    inputCard: {\n      width: \"95%\",\n      height: 'initial',\n      marginBottom: 50,\n    },\n    title: {\n      fontSize: 24,\n      margin: 'auto',\n    },\n    resultContainer: {\n      flexDirection: 'column',\n      alignItems: 'center',\n    },\n    select: {\n      width: 200,\n    }\n\n  },\n})\n\nconst getTrivia = (result: number) => {\n  if (result < 5 && result > 1) return trivia['1'][0]\n  else return trivia[`${Math.min(50, (Math.floor(result / 5) + 1) * 5)}` as TriviaPercentage][0]\n}\n\nconst getLastWeekDeaths = (location: string) => {\n  return RegionCovidData[location].lastWeekAverageDeathPerMillionEachDay\n}\n\nconst getAllDeaths = (location: string) => {\n  return RegionCovidData[location].allDeathPerMillion\n}\n\nconst DefaultEventSize = 5;\nfunction App() {\n  const [location, setLocation] = useState<string[]>([]);\n  const [eventSize, setEventSize] = useState(DefaultEventSize)\n  const [result, setResult] = useState<string>();\n\n  const selectRef = useRef<RefSelectProps | null>();\n\n  const classes = useStyles()\n\n  const handleChange = (val: string[]) => {\n    if (!val.length) {\n      setLocation([]);\n      return;\n    }\n    setLocation([val[0]]);\n    selectRef.current?.blur();\n  };\n\n  const handleSliderChange = (size: number) => setEventSize(size);\n\n  const handleButtonSubmit = () => {\n    setResult((contractionChanceRegion(location[0], eventSize) * 100).toFixed(2))\n  }\n\n  const startOver = () => {\n    setResult(undefined);\n  }\n\n  return (\n    <div className=\"App\">\n      <header style={{display: 'flex', flexDirection: 'row',marginBottom: 50, justifyContent: 'space-evenly', height: 100, width: \"100%\", backgroundColor: \"#000\"}}>\n        <div style={{margin: \"auto 50px\"}}>\n          <span style={{color: '#fff', verticalAlign:\"super\", marginRight: 5}}> Support: </span>\n          <a className=\"github-button\" \n          href=\"https://github.com/mmahdigh/covid-risk\" data-icon=\"octicon-star\" \n          data-size=\"large\" \n          data-show-count=\"true\"\n          aria-label=\"Star mmahdigh/covid-risk on GitHub\">Star</a>\n        </div>\n        <h1 className={classes.title}> Covid Event Risk Calculator </h1>\n      </header>\n      <div className={classes.mainContainer}>\n        <div style={{ boxShadow: result === undefined ? \"1px 1px 10px 1px rgb(180, 204, 248)\" :\n      \"1px 1px 10px 1px #19cb94\"}} className={classes.inputCard}>\n        {result !== undefined &&\n        <>\n          <div style={{display: 'flex', fontSize: 30, color: \"#0e6449\",fontWeight: 650, padding: \"12px 25px\"}}>\n            <p style={{marginBottom: 0}}> Odds: </p>\n          </div>\n          <div className={classes.resultContainer}>\n            <div style={{color: `rgb(${Math.min(256, Number(result) * 5)}, 0, 0)`}} className=\"result\">\n              <p id=\"result\"> {`${result}%`} </p>\n            </div>\n            <table className={classes.table}>\n            <thead>\n              <tr>\n                <th colSpan={2}>\n                  {location[0]} \n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td> Last Week Average Deaths Per 1M </td>\n                <td> {getLastWeekDeaths(location[0])} </td>\n              </tr>\n              <tr>\n                <td> All Time Deaths Per 1M </td>\n                <td> {getAllDeaths(location[0])} </td>\n              </tr>\n            </tbody>\n            </table>\n          </div>\n          <div style={{display: 'flex', justifyContent: 'space-evenly', \n          alignItems: 'center' , width: \"100%\", fontSize: 14, color: \"#fff\",\n          fontWeight: 500, padding: 25, backgroundColor: \"#222\"}}>\n            <div>\n              <p> It's close to the odds that  </p>\n              <p> {getTrivia(Number(result))} </p>\n            </div>\n            <button onClick={startOver} className=\"startOver\">\n              Start Over!\n            </button>\n          </div>\n        </>\n        }\n        {result === undefined && <> <div className={classes.rowContainer}>\n             <div>\n              <p> Event Size: </p>\n              <Slider max={250} className=\"slider\"  tooltipVisible value={eventSize} \n              onChange={handleSliderChange} defaultValue={DefaultEventSize} />\n            </div>\n            <img src={people} width={50} />\n          </div>\n          <div className={classes.rowContainer}>\n            <div>\n              <p> Location: </p>\n              <Select\n                mode=\"multiple\"\n                className={classes.select}\n                placeholder=\"Type One Country/Province/State\"\n                value={location}\n                ref={(ref) => (selectRef.current = ref)}\n                onChange={handleChange}\n                optionLabelProp=\"label\"\n              >\n                {Object.keys(RegionCovidData).sort().map((key) => {\n                  const region = RegionCovidData[key];\n                  return (\n                    <Option key={key} value={key}>\n                      <div\n                        style={{\n                          display: \"flex\",\n                          justifyContent: \"space-between\",\n                        }}\n                      >\n                        {calcRegionName(key)}\n                        <span role=\"img\" aria-label=\"China\">\n                          <img width={25} src={region.flag} />\n                        </span>\n                      </div>\n                    </Option>\n                  );\n                })}\n              </Select>\n            </div>\n            <img src={locationIcon} width={50} />\n          </div>\n          <button onClick={handleButtonSubmit} className=\"riskButton\"> Calculate </button> </>}\n          </div>\n      <div className=\"info\">\n        <p style={{fontWeight: 700}}> This calculator predicts the odds that there's already at least one\n          person infected with Covid19 in an event or party.\n        </p>\n        <p> Since testing capacity isn't distributed evenly in the world,\n          number of cases reported by different governments isn't accurate,\n          hospitalization and death counts are better indicator of how Covid \n          is harming a region. in this calculator, we use death count to predict \n          the number of cases in a region </p>\n        <p> We've presumed that 50% of cases are asymptomatic and symptomatic\n          cases refrain from participating in events and parties. \n        <p> IFR of different countries and regions are predicted \n        using their median age and IFR of the US published by CDC. </p>\n        </p>\n      </div>\n      </div>\n      <footer style={{position: 'relative',height: 100, width: \"100%\", backgroundColor: \"#000\", marginTop: 50, padding: 25}}>\n        <p style={{margin: \"auto\", color: '#fff'}}>  ALL RIGHTS RESERVED. COPYRIGHT © 2020. </p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","export const calcRegionName = (city: string) => city.replace('_', \" \");","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}